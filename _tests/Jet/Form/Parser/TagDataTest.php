<?php
namespace Jet;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-05 at 20:02:27.
 */
class Form_Parser_TagDataTest extends \PHPUnit_Framework_TestCase {
	/**
	 * @var Form_Parser_TagData
	 */
	protected $object;

	/**
	 * @var array
	 */
	protected $matches = [
			'<jet_form_tag name =  "name1" prop1="prop1_value"  prop2="prop2 value"   >',
			'_tag',
			'name =  "name1" prop1="prop1_value"  prop2="prop2 value"   '
	];

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new Form_Parser_TagData( $this->matches );
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
	}

	/**
	 * @covers Jet\Form_Parser_TagData::getTag
	 */
	public function testGetTag() {
		$this->assertEquals( substr($this->matches[1], 1), $this->object->getTag());
	}

	/**
	 * @covers Jet\Form_Parser_TagData::getName
	 */
	public function testGetName() {
		$this->assertEquals( 'name1', $this->object->getName() );
	}

	/**
	 * @covers Jet\Form_Parser_TagData::getOriginalString
	 */
	public function testGetOriginalString() {
		$this->assertEquals($this->matches[0], $this->object->getOriginalString());
	}

	/**
	 * @covers Jet\Form_Parser_TagData::getProperties
	 */
	public function testGetProperties() {
		$this->assertEquals(['prop1' => 'prop1_value', 'prop2' => 'prop2 value'], $this->object->getProperties());

	}

	/**
	 * @covers Jet\Form_Parser_TagData::setProperty
	 * @covers Jet\Form_Parser_TagData::getProperty
	 */
	public function testGetSetProperty() {
		$this->assertEquals('prop1_value', $this->object->getProperty('prop1') );
		$this->assertEquals('prop2 value', $this->object->getProperty('prop2') );

		$this->assertEquals('default value', $this->object->getProperty('imaginary_property', 'default value') );
		$this->assertNull( $this->object->getProperty('imaginary_property') );

		$this->assertNull( $this->object->getProperty('new_property') );
		$this->object->setProperty('new_property', 'new value');
		$this->assertEquals('new value', $this->object->getProperty('new_property') );


	}

	/**
	 * @covers Jet\Form_Parser_TagData::getPropertyIsSet
	 * @covers Jet\Form_Parser_TagData::unsetProperty
	 */
	public function testGetPropertyIsSetUnsetProperty() {
		$this->assertTrue($this->object->getPropertyIsSet('prop1') );
		$this->assertTrue($this->object->getPropertyIsSet('prop2') );
		$this->assertFalse( $this->object->getPropertyIsSet('imaginary_property') );
		$this->object->unsetProperty('prop2');
		$this->assertFalse( $this->object->getPropertyIsSet('prop2') );
	}

}
