<?php
namespace JetStudio;

?>

<!--suppress JSUnresolvedFunction -->
<script type="text/javascript">
	const Bases = {
		createBase: {
			openDialog: function () {
				$('#dialog_create_new_base').modal('show');
			},
			createSend: function () {
				JetAjaxForm.submit(
					'<?=Bases::getCreateForm()->getId()?>',
					{
						onSuccess: function (form, response_data) {
							location = '?base=' + encodeURIComponent(response_data['new_base_id'])
						}
					}
				);
			},
			generateId: function (name) {
				$.ajax({
					url: '<?=Bases::getActionUrl( 'generate_id', [], false )?>&name=' + encodeURIComponent(name),
					dataType: 'json',
					success: function (result) {
						$('#base_create_form__id').val(result.id);
					}
				});
			},
			addLocale: {
				openDialog: function () {
					Dialog_SelectLocale.open(function (locale_data) {

						let selected_locale = locale_data.locale;
						let locales_field = $('#base_create_form__locales');
						let selected_locales;

						if (!locales_field.val()) {
							selected_locales = selected_locale;
						} else {
							selected_locales = locales_field.val().split(',');

							if (selected_locales.indexOf(selected_locale) < 0) {
								selected_locales.push(selected_locale);
							}

							selected_locales = selected_locales.join(',');
						}


						locales_field.val(selected_locales);

						Bases.createBase.addLocale._actualize();
					});
				},

				unSelect: function (locale) {
					let locales_field = $('#base_create_form__locales');
					let selected_locales = locales_field.val().split(',');

					let new_selected_locales = [];
					for (let i = 0; i < selected_locales.length; i++) {

						if (selected_locales[i] != locale) {
							new_selected_locales.push(selected_locales[i]);
						}

					}

					new_selected_locales = new_selected_locales.join(',');
					locales_field.val(new_selected_locales);
					Bases.createBase.addLocale._actualize();
				},

				_actualize: function () {
					const selected_locales = $('#base_create_form__locales').val().split(',');

					$('.selected-locale-row').each(function (index, row) {
						row = $(row);
						const locale = row.data('locale');

						if (selected_locales.indexOf(locale) > -1) {
							row.show();
						} else {
							row.hide();
						}

					});

				}
			}
		},
		editBase: {
			addLocale: function () {
				Dialog_SelectLocale.open(function (locale_data) {

					$('#add_locale_form__locale').val(locale_data.locale);
					$('#add_locale_form').submit();

				});
			},

			sortLocales: function () {
				$('#locales_sort_dialog').modal('show');


				setTimeout(function () {
					$('#locales_sort_area').sortable({
						stop: function () {
							const locales = [];

							$('#locales_sort_area').find('.locale-sort-item').each(function (i, item) {
								const id = $(item).data('locale');

								locales.push(id);
							});

							$('#sort_locales_form__locales').val(locales.join(','));
						}

					});

				}, 1000)

			}
		}
	}
</script>
